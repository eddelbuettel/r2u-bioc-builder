# Experiment with bioc -- one-off builder

name: oneoff

on:
  #push:
  #pull_request:
  ##release:
  workflow_dispatch:
    inputs:
      dist:
        description: 'The Ubuntu distribution to use'
        required: false
        default: 'noble'
        type: string

jobs:
  setup:
    runs-on: ubuntu-latest
    if: github.repository == 'eddelbuettel/r2u-bioc-builder'
    container:
      image: eddelbuettel/gha_r2u_bioc_build:noble
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Create Default Config and Cache
        run: |
          r -e 'r2u:::.createDefaultConfiguration()'
      - name: Fetch Updated Config
        uses: actions/checkout@v4
        with:
          repository: eddelbuettel/r2u-config
          path: r2u-config
      - name: Copy Updated Config
        run: |
          cp -vax r2u-config/* ~/.local/share/R/r2u
      - name: Create Cache
        run: |
          r -e 'r2u:::.loadDB()'
          r -e 'r2u:::.loadAP()'
      - name: Upload Config
        uses: actions/upload-artifact@v4.4.0
        with:
          name: r2u_config
          path: ~/.local/share/R/r2u
      #- name: Compute Package Set
      #  run: |
      #    Rscript -e 'options(width=200); r2u:::.getBuildTargets("/tmp/P.txt", verbose=)'
      #- name: Upload Package Set
      #  uses: actions/upload-artifact@v4.4.0
      #  with:
      #    name: package_set
      #    path: /tmp/P.txt
          
  make_matrix:
    needs: setup
    runs-on: ubuntu-latest
    if: github.repository == 'eddelbuettel/r2u-bioc-builder'
    outputs:
      runmatrix: ${{ steps.makematrixstep.outputs.matrixoutput }}
    steps:
      #- name: Get Package Set
      #  uses: actions/download-artifact@v4.1.8
      #  with:
      #    name: package_set
      #    path: /tmp
      #- name: Show Package Set
      #  run: cat /tmp/P.txt
      ## see https://www.kenmuse.com/blog/dynamic-build-matrices-in-github-actions/
      - id: makematrixstep
        run: |
          #TARGETS=$(cat /tmp/P.txt)
          #echo "TARGETS is '$TARGETS'"
          #echo "matrixoutput=$(jq -cn --argjson environments "$TARGETS" '$environments')" >> $GITHUB_OUTPUT        
          # 
          TARGETS=$(echo '[ "h5mread" ]')
          echo "matrixoutput=$(jq -cn --argjson environments "$TARGETS" '{target: $environments}')" >> $GITHUB_OUTPUT        
          
  package:
    needs: make_matrix
    runs-on: ubuntu-latest
    if: github.repository == 'eddelbuettel/r2u-bioc-builder'
    container:
      image: eddelbuettel/gha_r2u_bioc_build:noble
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.make_matrix.outputs.runmatrix) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Get Config
        uses: actions/download-artifact@v4.1.8
        with:
          name: r2u_config
          path: ~/.local/share/R/r2u
      - name: Fetch Updated Config
        uses: actions/checkout@v4
        with:
          repository: eddelbuettel/r2u-config
          path: r2u-config
      - name: Copy Updated depends.dcf
        run: |
          cp -vax r2u-config/depends.dcf r2u-config/depends.noble.dcf r2u-config/blacklist.txt ~/.local/share/R/r2u
      - name: Build
        #run:  r2u.r -v -d -c -f -s .2 -r noble package ${{ matrix.target }}
        run:  r2u.r -v -d -c -f       -r noble package ${{ matrix.target }}
      - name: Check
        run:  test -f /var/local/r2u/ubuntu/pool/dists/noble/main/*.deb
      - name: Upload Deb
        uses: actions/upload-artifact@v4.4.0
        with:
          name: deb-${{ matrix.target }}
          path: /var/local/r2u/ubuntu/pool/dists/noble/main/
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: /var/local/r2u/ubuntu/pool/dists/noble/main/*deb
          make_latest: true
          prerelease: true
          tag_name: latest
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_GITHUB }}
          
         

